{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jcmoreno/Documents/__/rts__/src/refs/UserSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nconst users = [{\n  name: 'Sarah',\n  age: 20\n}, {\n  name: 'Alex',\n  age: 20\n}, {\n  name: 'Mariana',\n  age: 20\n}];\n\nconst UserSearch = () => {\n  _s();\n\n  const inputRef = useRef(null);\n  const [name, setName] = useState('');\n  const [user, setUser] = useState();\n  useEffect(() => {\n    if (!inputRef.current) return;\n    inputRef.current.focus();\n  }, []);\n\n  const onClick = () => {\n    const foundUser = users.find(user => {\n      return user.name === name;\n    });\n    setUser(foundUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      onChange: e => setName(e.target.value),\n      type: \"text\",\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Find User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User: \", user === null || user === void 0 ? void 0 : user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", user === null || user === void 0 ? void 0 : user.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSearch, \"cM3d4nHLOw35hedoHtLV8xqK5To=\");\n\n_c = UserSearch;\nexport default UserSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"sources":["/Users/jcmoreno/Documents/__/rts__/src/refs/UserSearch.tsx"],"names":["useEffect","useRef","useState","users","name","age","UserSearch","inputRef","setName","user","setUser","current","focus","onClick","foundUser","find","e","target","value"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,GAAG,EAAE;AAAtB,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,GAAG,EAAE;AAArB,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,GAAG,EAAE;AAAxB,CAHY,CAAd;;AAKA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAMC,QAAQ,GAAGN,MAAM,CAA0B,IAA1B,CAAvB;AACA,QAAM,CAACG,IAAD,EAAOI,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,QAAQ,CAACI,OAAd,EAAuB;AACvBJ,IAAAA,QAAQ,CAACI,OAAT,CAAiBC,KAAjB;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAGX,KAAK,CAACY,IAAN,CAAYN,IAAD,IAAU;AACrC,aAAOA,IAAI,CAACL,IAAL,KAAcA,IAArB;AACD,KAFiB,CAAlB;AAIAM,IAAAA,OAAO,CAACI,SAAD,CAAP;AACD,GAND;;AAQA,sBACE;AAAA,4BACE;AACE,MAAA,GAAG,EAAEP,QADP;AAEE,MAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEd;AAJT;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,OAAO,EAAES,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,8BACE;AAAA,6BAAUJ,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEL,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4BAASK,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAEJ,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjCD;;GAAMC,U;;KAAAA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst users = [\n  { name: 'Sarah', age: 20 },\n  { name: 'Alex', age: 20 },\n  { name: 'Mariana', age: 20 },\n];\nconst UserSearch: React.FC = () => {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [name, setName] = useState('');\n  const [user, setUser] = useState<{ name: string; age: number } | undefined>();\n\n  useEffect(() => {\n    if (!inputRef.current) return;\n    inputRef.current.focus();\n  }, []);\n\n  const onClick = () => {\n    const foundUser = users.find((user) => {\n      return user.name === name;\n    });\n\n    setUser(foundUser);\n  };\n\n  return (\n    <div>\n      <input\n        ref={inputRef}\n        onChange={(e) => setName(e.target.value)}\n        type=\"text\"\n        value={name}\n      />\n      <button onClick={onClick}>Find User</button>\n      <div>\n        <p>User: {user?.name}</p>\n        <p>Age: {user?.age}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSearch;\n"]},"metadata":{},"sourceType":"module"}